version: '3.7'
services:
  frontend:
    build: ./frontend
    ports:
      - "4021:80"
  order-service:
    build: ./order-service
    ports:
      - "8011:8011"
    depends_on:
      mongo-db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  inventory-service:
    build: ./inventory-service
    ports:
      - "8012:8012"
    depends_on:
      mongo-db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  shipment-service:
    build: ./shipment-service
    ports:
      - "8013:8013"
    depends_on:
      mongo-db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    links:
      - zookeeper:zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      KAFKA_MESSAGE_MAX_BYTES: 2000000
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  mongo-db:
    container_name: mongo-db
    build: ./mongo-replset
    ports:
      - "27021:27017"
    depends_on:
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo-db:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo2:
    container_name: mongo2
    image: mongo
    ports:
      - "27022:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo2:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo3:
    container_name: mongo3
    image: mongo
    ports:
      - "27023:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo3:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-seed-inventory-service:
    build: ./inventory-service/src/main/resources/mongo-seed
    depends_on:
      mongo-db:
        condition: service_healthy