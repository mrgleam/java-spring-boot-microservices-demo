version: '3'
services:
  frontend:
    build: ./frontend
    ports:
      - "4021:80"
  order-service:
    build: ./order-service
    ports:
      - "8011:8011"
    depends_on:
      - mongo-db
    links:
      - mongo-db
  inventory-service:
    build: ./inventory-service
    ports:
      - "8012:8012"
    depends_on:
      - mongo-db
    links:
      - mongo-db
  shipment-service:
    build: ./shipment-service
    ports:
      - "8013:8013"
    depends_on:
      - mongo-db
    links:
      - mongo-db

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    links:
      - zookeeper:zk
    ports:
      - "9092:9092"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    depends_on:
      - zookeeper

  mongo-db:
    container_name: mongo-db
    build: ./mongo-replset
    ports:
      - "27021:27017"
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    image: mongo
    ports:
      - "27022:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo
    ports:
      - "27023:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo-seed-inventory-service:
    build: ./inventory-service/src/main/resources/mongo-seed
    depends_on:
      - mongo-db
    links:
      - mongo-db